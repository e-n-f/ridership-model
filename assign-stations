#!/usr/bin/perl

$foot = .00000274;
$bucket = 5280 * $foot;
$pi = 4 * atan2(1, 1);

open(IN, "names-corrected-centers");
while (<IN>) {
	# 60390 Powell bart-home-3-07.svg bart-other-2-08.svg 37.784050,-122.407565

	next if /#/;

	chomp;
	($riders, $name, $where) = split(/ /, $_, 3);
	while ($where =~ s/.*svg //) {
		;
	}
	($lat, $lon) = split(/,/, $where);

	$lat{$name} = $lat;
	$lon{$name} = $lon;
	$riders{$name} = $riders;

	push @{$cand{int($lat / $bucket)}{int($lon / $bucket)}}, $name;
}
close(IN);

sub find {
	my ($lat, $lon) = @_;

	if (defined($distance{$lat}{$lon})) {
		return %{$distance{$lat}{$lon}};
	}

	my $best = "";
	my $bestd = 99999999;
	my $rat = cos($lat * $pi / 180);

	my %ret = ();

	my ($a, $o);
	for ($a = int($lat / $bucket) - 4; $a <= int($lat / $bucket) + 4; $a++) {
		for ($o = int($lon / $bucket) - 4; $o <= int($lon / $bucket) + 4; $o++) {
			my @cand = @{$cand{$a}{$o}};

			for my $c (@cand) {
				my $latd = $lat - $lat{$c};
				my $lond = ($lon - $lon{$c}) * $rat;
				my $d = sqrt($latd * $latd + $lond * $lond) / $foot;

				if ($d < 4 * 5280) {
					$ret{$c} = $d;
				}
			}
		}
	}

	%{$distance{$lat}{$lon}} = %ret;
	return %ret;
}

sub pdf {
	my ($x, $u, $o) = @_;

	return exp(- ((log($x) - $u) * (log($x) - $u) / 2 * $o * $o)) / ($x * $o * sqrt(2 * $pi));
}

open(IN, "all-commute-2012-37-122");
while (<IN>) {
	$s = int($seq++ * 100 / 4211586);
	if ($s != $os) {
		$os = $s;
		print STDERR "$s\r";
	}

	chomp;
	@fields = split(/,/);

	$count = $fields[2];
	$worklat = $fields[13];
	$worklon = $fields[14];
	$homelat = $fields[15];
	$homelon = $fields[16];

	%work = find($worklat, $worklon);
	%home = find($homelat, $homelon);

	for $workstation (keys(%work)) {
		for $homestation(keys(%home)) {
			$workdistance = $work{$workstation};
			$homedistance = $home{$homestation};

			$workweight = pdf($workdistance, 7.13947, 1.03404) / $workdistance;
			$homeweight = pdf($homedistance, 8.64499, 1.20751) / $homedistance;

			if ($workstation ne "") {
				$sum{$homestation} += $workweight * $homeweight * $count;
			}
			if ($homestation ne "") {
				$sum{$workstation} += $workweight * $homeweight * $count;
			}
		}
	}
}

# f(x) = m * x ** a
# fit log(f(x)) "assigned" using 2:(log($3)) via m, a

for $station (sort(keys(%sum))) {
	next if $station eq "";

	printf("%s %.40f %d %d\n", $station, $sum{$station}, $riders{$station}, 1 / 7.37368e-16 * exp(log($sum{$station}) * 1.15721));
}

exit(0);

for $pair (sort(keys(%weight))) {
	printf("%s %.16f\n", $pair, $weight{$pair});
}
